selection:
   ### use `&`, `|`, `~` for logical operations on numpy arrays
   ### can use functions from `math`, `np` (numpy), and `awkward` in the expression
   #(jet_tightId==1) & (jet_no<2) & (((sample_isQCD==0) & (fj_isQCD==0)) | ((sample_isQCD==1) & (fj_isQCD==1))) & (event_no%7!=0)

new_variables:
   ### [format] name: formula
   ### can use functions from `math`, `np` (numpy), and `awkward` in the expression
   lccand_mask: awkward.JaggedArray.ones_like(lc_eta)
   label_lc: lc_hits_energy_from_cp   

inputs:
   lc_points:
      length: 100
      vars: 
         - lc_x
         - lc_y
         - lc_z
   lc_features:
      length: 100
      vars: 
      ### [format 1]: var_name (no transformation)
      ### [format 2]: [var_name, subtract_by(optional, default=None, no transf.), multiply_by(optional, default=1), clip_min(optional, default=-5), clip_max(optional, default=5), pad_value(optional, default=0)]
         - lc_eta
         - lc_phi
         - lc_nrechits
   lc_mask:
      length: 100
      vars: 
         - lccand_mask

labels:
   ### type can be `simple`, `custom`
   ### [option 1] use `simple` for binary/multi-class classification, then `value` is a list of 0-1 labels
   type: simple
   value: [ label_pu, label_nopu ]
   ### [option 2] otherwise use `custom` to define the label, then `value` is a map
   # type: custom
   # value: 
      # target_mass: np.where(fj_isQCD, fj_genjet_sdmass, fj_gen_mass) 

observers:
   - event
   - ts_raw_energy
   - ts_eta
   - ts_phi
   - cp_energy
   - cp_pt
   - cp_eta
   - cp_phi
   

weights:
   ### [option 1] use precomputed weights stored in the input files
   # use_precomputed_weights: true
   # weight_branches: [weight, class_weight]
   ### [option 2] compute weights on-the-fly using reweighting histograms
   use_precomputed_weights: false
   reweight_method: flat
   reweight_vars:
      cp_energy: [0, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500, 550, 600, 650, 700, 750, 800, 850, 900, 950, 1000]
   reweight_classes: [lc_hits_energy_from_cp, label_pu, label_nopu]
   class_weights: [2, 1, 1]
   reweight_hists:

